{"version":3,"sources":["components/Todo/Todo.module.css","context.js","components/Todo/TodoItem.js","components/Todo/TodoList.js","components/Todo/AddTodo.js","components/Loader.js","App.js","index.js"],"names":["module","exports","Context","React","createContext","TodoItem","item","index","handleToggle","removeTodo","useContext","classes","completed","push","styles","className","join","type","checked","onChange","id","title","onClick","TodoList","todos","list","map","key","AddTodo","handleCreate","input","useState","value","setValue","html","event","target","clear","useInputValue","onSubmit","preventDefault","trim","initialState","App","setTodos","lastId","setLastId","loading","setLoading","useEffect","fetch","then","response","json","newLastId","length","Provider","filter","disabled","Loader","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00209758.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Todo_list__IQRnh\",\"item\":\"Todo_item__1FNyp\",\"done\":\"Todo_done__1VpoR\",\"checkbox\":\"Todo_checkbox__3CBDk\",\"button-close\":\"Todo_button-close__1YgDQ\",\"add-form\":\"Todo_add-form__D12uX\"};","import React from 'react'\r\n\r\nconst Context = React.createContext()\r\nexport default Context\r\n","import React, { useContext } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from '../../context'\r\nimport styles from './Todo.module.css'\r\n\r\n\r\nfunction TodoItem({ item, index, handleToggle }) {\r\n    const { removeTodo } = useContext(Context)\r\n\r\n    const classes = []\r\n    if (item.completed) {\r\n        classes.push(styles['done'])\r\n    }\r\n\r\n    return (\r\n        <li className={styles.item}>\r\n            <span className={classes.join(' ')}>\r\n                <label>\r\n                    <input type=\"checkbox\" \r\n                        className={styles['checkbox']}\r\n                        checked={item.completed ? 'checked' : ''}\r\n                        onChange={ () => handleToggle(item.id) } />\r\n                    <strong> {index + 1}</strong>&nbsp;\r\n                    { item.title }\r\n                </label>\r\n            </span>\r\n            <button className={styles['button-close']} onClick={() => removeTodo(item.id)}>&times;</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nTodoItem.propTypes = {\r\n    item: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        completed: PropTypes.bool,\r\n        title: PropTypes.string\r\n    }).isRequired,\r\n    handleToggle: PropTypes.func.isRequired,\r\n    index: PropTypes.number\r\n}\r\n\r\nexport default TodoItem\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport TodoItem from './TodoItem'\r\nimport styles from './Todo.module.css'\r\n\r\nfunction TodoList({ todos, handleToggle }) {\r\n    return (\r\n        <ul className={styles.list}>\r\n            { todos.map((item, index) => (\r\n                <TodoItem item={item} index={index} key={item.id} handleToggle={handleToggle} />\r\n            )) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nTodoList.propTypes = {\r\n    todos: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    handleToggle: PropTypes.func.isRequired\r\n}\r\n\r\nexport default TodoList\r\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport styles from './Todo.module.css'\r\n\r\n\r\nfunction useInputValue(defaultValue = '') {\r\n    const [value, setValue] = useState('')\r\n    return {\r\n        html: {\r\n            value,\r\n            onChange: event => setValue(event.target.value),\r\n        },\r\n        value,\r\n        clear: () => setValue('')\r\n    }\r\n}\r\n\r\nfunction AddTodo({ handleCreate }) {\r\n    const input = useInputValue('')\r\n    \r\n    function handleSubmit(event) {\r\n        event.preventDefault()\r\n        if (input.value.trim()) {\r\n            handleCreate(input.value)\r\n            input.clear()\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form className={styles['add-form']} onSubmit={handleSubmit}>\r\n            <input type=\"text\" {...input.html} />\r\n            <button type=\"submit\">Add Todo</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddTodo.propTypes = {\r\n    handleCreate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\n\r\nexport default () => <div>Loading...</div>\r\n","import React, { useState, useEffect } from 'react'\nimport Context from './context'\nimport TodoList from './components/Todo/TodoList'\nimport AddTodo from './components/Todo/AddTodo'\nimport Loader from './components/Loader'\n\n\nconst initialState = [\n  {id: 1, completed: false, title: 'Купить хлеб'},\n  {id: 2, completed: true, title: 'Купить масло'},\n  {id: 3, completed: false, title: 'Купить молоко'}\n]\n\nfunction App() {\n  const [todos, setTodos] = useState(initialState)\n  const [lastId, setLastId] = useState(null)\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    if (!loading) {\n      return\n    }\n\n    fetch('https://jsonplaceholder.typicode.com/todos?_limit=5')\n    .then(response => response.json())\n    .then(json => {\n      setTodos(json)\n      setLoading(false)\n    })\n  }, [loading])\n\n  const newLastId = todos.length ? +todos[todos.length-1].id + 1 : null\n  if (newLastId !== lastId) {\n    setLastId(newLastId)\n  }\n\n  const fetchFromServer = () => {\n    setLoading(true)\n  }\n\n  const toggleItem = (id) => {\n    setTodos(todos.map(item => {\n      if (item.id === id) {\n        item.completed = !item.completed\n      }\n      return item\n    }))\n  }\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter(item => item.id !== id))\n  }\n  const addTodo = (title) => {\n    const id = lastId + 1\n    setLastId(id)\n    setTodos([...todos, {\n      id,\n      title,\n      completed: false\n    }])\n  }\n\n  return (\n    <Context.Provider value={{ removeTodo }}>\n      <div className=\"App wrapper\">\n        <h1>Todo List</h1>\n        <button onClick={fetchFromServer} disabled={loading}>Fetch from Server</button>\n        <AddTodo handleCreate={addTodo} />\n        {todos.length ? (\n        <TodoList todos={todos} handleToggle={toggleItem} />\n        ) : (\n          loading ? <Loader /> : 'No todos'\n        )}\n      </div>\n    </Context.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}